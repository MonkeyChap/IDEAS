unit Unit14;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, EA_TLB, EA_Ideas_Lib;

type
  TForm14 = class(TForm)
    GroupBox1: TGroupBox;
    CheckBox1: TCheckBox;
    Edit1: TEdit;
    CheckBox2: TCheckBox;
    Edit2: TEdit;
    GroupBox2: TGroupBox;
    CheckBox4: TCheckBox;
    CheckBox5: TCheckBox;
    CheckBox6: TCheckBox;
    Edit4: TEdit;
    Edit5: TEdit;
    Edit6: TEdit;
    Label1: TLabel;
    Button1: TButton;
    Button2: TButton;
    procedure CheckBox1Click(Sender: TObject);
    procedure CheckBox2Click(Sender: TObject);
    procedure CheckBox4Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure CheckBox5Click(Sender: TObject);
    procedure CheckBox6Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    rep : iDualRepository;
    elem : iDualElement;
    supertypes : tStringList;
    diagram : iDualDiagram;
    diagObj : iDualDiagramObject;
    { Public declarations }
  end;

var
  Form14: TForm14;

implementation

{$R *.dfm}

procedure TForm14.Button1Click(Sender: TObject);
var
  part,state,wp,wap,ws, super : iDualElement;
  sst : iDualConnector;
  myDO : iDualDiagramObject;
  l,r,t,b, tl, tr : string;
  holder : tElemHolder;
  elements : iDualCollection;
begin
  l := vartostr(diagObj.left);
  r := vartostr(diagObj.right);
  tl := vartostr(diagObj.right + 200);
  tr := vartostr(diagObj.right + 350);
  t := vartostr(diagObj.top + 280);
  b := vartostr(diagObj.top + 240);
  if checkbox1.Checked then
  begin
  //'l=200;r=400;t=200;b=300;'
    part := createIndividualType(rep,edit1.Text, rep.GetPackageByID(elem.PackageID),'',diagram,myDO,'l=' + l + ';r=' + r + ';t=' + t + ';b=' + b + ';');
    if checkbox4.Checked then
    begin
      wp := createTupleType(rep,edit4.Text, rep.GetPackageByID(elem.PackageID),'',diagram,myDO,'l=' + tl + ';r=' + tr + ';t=' + t + ';b=' + b + ';',elem,part,nil,nil,nil,'whole','part','','','');
    end;
    if supertypes.Count = 1 then
    begin
      holder := supertypes.Objects[0] as tElemHolder;
      elements := rep.GetElementsByQuery('findName',holder.name + 'Part');
      if elements.Count = 1 then
      begin
        super := elements.GetAt(0) as iDualElement;
        sst := createSST(rep,part,super);
      end;
    end;
  end;
  if checkbox2.Checked then
  begin
    t := vartostr(diagObj.top + 140);
    b := vartostr(diagObj.top + 100);
    state := createIndividualType(rep,edit2.Text, rep.GetPackageByID(elem.PackageID),'',diagram,myDO,'l=' + l + ';r=' + r + ';t=' + t + ';b=' + b + ';');
    if supertypes.Count = 1 then
    begin
      holder := supertypes.Objects[0] as tElemHolder;
      elements := rep.GetElementsByQuery('findName',holder.name + 'State');
      if elements.Count = 1 then
      begin
        super := elements.GetAt(0) as iDualElement;
        sst := createSST(rep,state,super);
      end;
    end;
    if checkbox6.Checked then
    begin
      ws := createTupleType(rep,edit6.Text, rep.GetPackageByID(elem.PackageID),'',diagram,myDO,'l=' + tl + ';r=' + tr + ';t=' + t + ';b=' + b + ';',elem,state,nil,nil,nil,'whole','state','','','');
    end;
    if checkbox1.Checked then
    begin
  //    memo1.lines.add('create sst from part to state');
      sst := createSST(rep,state,part);
      if checkbox4.Checked and checkbox6.Checked then
      begin
 //     memo1.lines.add('//create sst from wp to ws');
      sst := createSST(rep,ws,wp);
      end;
    end;
  end;
  if checkbox5.Checked then
  begin
    t := vartostr(diagObj.top);
    b := vartostr(diagObj.bottom);
    wap := createTupleType(rep,edit5.Text, rep.GetPackageByID(elem.PackageID),'desc',diagram,myDO,'l=' + tl + ';r=' + tr + ';t=' + t + ';b=' + b + ';',elem,elem,nil,nil,nil,'whole','part','','','');
    if checkbox2.checked AND checkbox6.checked then
    begin
  //    memo1.lines.add('//create sst from wap to ws');
      sst := createSST(rep,wap,ws);
    end
    else
    if checkbox1.checked AND checkbox4.checked then
    begin
 //     memo1.lines.add('//create sst from wap to wp');
      sst := createSST(rep,wap,wp);
    end

  end;
  rep.ReloadDiagram(diagram.DiagramID);
  close;
end;

procedure TForm14.Button2Click(Sender: TObject);
begin
  close;
end;

procedure TForm14.CheckBox1Click(Sender: TObject);
begin
 if checkbox1.Checked then edit1.Enabled := true else
 begin
   edit1.Enabled := false;
   checkbox4.Checked := false;
   edit4.Enabled := false;
 end;
end;

procedure TForm14.CheckBox2Click(Sender: TObject);
begin
 if checkbox2.Checked then edit2.Enabled := true else
 begin
   edit2.Enabled := false;
   checkbox6.Checked := false;
   edit6.Enabled := false;
 end;
end;

procedure TForm14.CheckBox4Click(Sender: TObject);
begin
 if checkbox4.Checked then edit4.Enabled := true else edit4.Enabled := false;
end;

procedure TForm14.CheckBox5Click(Sender: TObject);
begin
 if checkbox5.Checked then edit5.Enabled := true else edit5.Enabled := false;
end;

procedure TForm14.CheckBox6Click(Sender: TObject);
begin
 if checkbox6.Checked then edit6.Enabled := true else edit6.Enabled := false;
end;

end.
